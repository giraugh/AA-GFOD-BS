{"version":3,"sources":["config/paths.js","public/img/BotHello.svg","public/img/BotThinking.svg","public/img/BotAha.svg","components/RobotImage/RobotImage.js","config/strings.js","config/game.js","hooks/useResponses.js","hooks/usePivot.js","util/game.js","hooks/useResponseKind.js","components/GameBox/GameBox.js","components/App/App.js","index.js"],"names":["guessPath","resultPath","RobotImageFromPath","p","className","src","alt","RobotImage","path","exact","component","robotImageHello","robotImageThinking","robotImageAha","strings","greeting","greetingPrompt","greetingHint","guess","value","kind","end","MAX_AGE","createEmpty","Array","from","length","useResponses","create","set","responses","setResponse","index","pivot","response","state","map","v","i","clear","usePivot","max","min","res","Math","floor","calcPivot","slice","kinds","useResponseKind","randomizeKind","random","GuessBox","history","useHistory","count","useParams","step","Number","onResponse","push","onClick","GreetingBox","to","EndBox","GameBox","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2e12326.chunk.js","sourcesContent":["export const homePath = '/'\nexport const guessPath = '/guess/:count'\nexport const resultPath = '/result'\n\n","export default __webpack_public_path__ + \"static/media/BotHello.f9a02c85.svg\";","export default __webpack_public_path__ + \"static/media/BotThinking.a19afa7c.svg\";","export default __webpack_public_path__ + \"static/media/BotAha.12000c8e.svg\";","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport './RobotImage.css'\n\nimport { homePath, guessPath, resultPath } from '../../config/paths'\n\nimport robotImageHello from '../../public/img/BotHello.svg'\nimport robotImageThinking from '../../public/img/BotThinking.svg'\nimport robotImageAha from '../../public/img/BotAha.svg'\n\nconst RobotImage = () => {\n  return (\n    <>\n      <Route\n        path={homePath}\n        exact\n        component={RobotImageFromPath(robotImageHello)}\n      />\n      <Route\n        path={guessPath}\n        component={RobotImageFromPath(robotImageThinking)}\n      />\n      <Route path={resultPath} component={RobotImageFromPath(robotImageAha)} />\n    </>\n  )\n}\n\nconst RobotImageFromPath = (p) => () => (\n  <img className=\"robot-image\" src={p} alt={'Robot mascot'} />\n)\n\nexport default RobotImage\n","const locale = 'EN_AU'\nconst strings = {\n  EN_AU: {\n    greeting: `Hey there!`,\n    greetingPrompt: `I reckon I can guess your age!`,\n    greetingHint: `Or you could think of another age`,\n    guess: (value, kind) =>\n      `Are you ${kind === 'gt' ? 'older' : 'younger'} than ${value}?`,\n    end: (value) => `I think you are ${value} year${value > 1 ? 's' : ''} old!`,\n  },\n}\n\nexport default strings[locale]\n","export const GUESS_COUNT = 7\nexport const MIN_AGE = 1\nexport const MAX_AGE = 2 ** GUESS_COUNT\n","import create from 'zustand'\n\nimport { GUESS_COUNT } from '../config/game'\n\nconst createEmpty = () => Array.from({ length: GUESS_COUNT })\n\nconst useResponses = create((set) => ({\n  responses: createEmpty(),\n  setResponse: (index, pivot, response, kind = 'gt') =>\n    set((state) => ({\n      responses: state.responses.map((v, i) =>\n        index === i ? [pivot, response, kind] : v\n      ),\n    })),\n  clear: () => set({ responses: createEmpty() }),\n}))\n\nexport default useResponses\n","import useResponses from './useResponses'\nimport { calcPivot } from '../util/game'\n\nconst usePivot = (index) => {\n  const {responses} = useResponses()\n  const prevResponses = responses.slice(0, index)\n  const pivot = calcPivot(prevResponses)\n  return pivot\n}\n\nexport default usePivot\n","import { MIN_AGE, MAX_AGE } from '../config/game'\n\nexport const calcPivot = (responses) => {\n  let max = MAX_AGE\n  let min = MIN_AGE\n  for (let [pivot, res, kind] of responses) {\n    if (kind === 'gt') {\n      if (res) {\n        min = pivot + 1\n      } else {\n        max = pivot\n      }\n    }\n\n    if (kind === 'lt') {\n      if (res) {\n        max = pivot - 1\n      } else {\n        min = pivot\n      }\n    }\n  }\n\n  return Math.floor((max + min) / 2)\n}\n","import create from 'zustand'\n\nconst kinds = ['gt', 'lt']\n\nconst useResponseKind = create((set) => ({\n  kind: 'gt',\n  randomizeKind: () =>\n    set({ kind: kinds[Math.floor(Math.random() * kinds.length)] }),\n}))\n\nexport default useResponseKind\n","import React from 'react'\nimport { Route, Link, useHistory, useParams } from 'react-router-dom'\n\nimport './GameBox.css'\n\nimport { homePath, guessPath, resultPath } from '../../config/paths'\nimport RobotImage from '../RobotImage/RobotImage'\nimport strings from '../../config/strings'\nimport useResponses from '../../hooks/useResponses'\nimport usePivot from '../../hooks/usePivot'\nimport useResponseKind from '../../hooks/useResponseKind'\nimport { GUESS_COUNT } from '../../config/game'\n\nconst GameBox = () => {\n  return (\n    <div className=\"game-box\">\n      <RobotImage />\n      <div className=\"game-box-content\">\n        <Route path={homePath} exact component={GreetingBox} />\n        <Route path={guessPath} component={GuessBox} />\n        <Route path={resultPath} component={EndBox} />\n      </div>\n    </div>\n  )\n}\n\nconst GuessBox = () => {\n  const history = useHistory()\n  const { count } = useParams()\n  const { setResponse } = useResponses()\n  const pivot = usePivot(count - 1)\n  const { kind, randomizeKind } = useResponseKind()\n\n  const step = Number(count)\n\n  // Add a response when a 'yes' / 'no' button is pressed\n  const onResponse = (response) => () => {\n    // Add response\n    setResponse(step - 1, pivot, response, kind)\n\n    // Change next response type\n    randomizeKind()\n\n    // Show next guess / results\n    history.push(step < GUESS_COUNT ? `/guess/${step + 1}` : '/result')\n  }\n\n  return (\n    <div className=\"center\">\n      {strings.guess(pivot, kind)}\n      <div className=\"button-group\">\n        <button className=\"action-button\" onClick={onResponse(false)}>\n          No\n        </button>\n        <button className=\"action-button\" onClick={onResponse(true)}>\n          Yes\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst GreetingBox = () => {\n  return (\n    <div>\n      {strings.greeting}\n      <br />\n      {strings.greetingPrompt}\n      <span className=\"hint\">({strings.greetingHint})</span>\n      <Link to=\"/guess/1\" className=\"action-button\">\n        Okay!\n      </Link>\n    </div>\n  )\n}\n\nconst EndBox = () => {\n  const history = useHistory()\n  const { clear } = useResponses()\n  const pivot = usePivot(GUESS_COUNT)\n\n  const onRestart = () => {\n    clear()\n    history.push('/')\n  }\n\n  return (\n    <div className=\"center\">\n      {strings.end(pivot)}\n      <button className=\"action-button\" onClick={onRestart}>\n        Play Again\n      </button>\n    </div>\n  )\n}\n\nexport default GameBox\n","import React from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport './App.css'\n\nimport GameBox from '../GameBox/GameBox'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='app'>\n        <GameBox />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}